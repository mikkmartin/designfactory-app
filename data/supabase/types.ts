/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/files": {
    get: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.files.slug"];
          createdAt?: parameters["rowFilter.files.createdAt"];
          modifiedAt?: parameters["rowFilter.files.modifiedAt"];
          template?: parameters["rowFilter.files.template"];
          title?: parameters["rowFilter.files.title"];
          data?: parameters["rowFilter.files.data"];
          id?: parameters["rowFilter.files.id"];
          disabledFields?: parameters["rowFilter.files.disabledFields"];
          owner?: parameters["rowFilter.files.owner"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["files"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** files */
          files?: definitions["files"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.files.slug"];
          createdAt?: parameters["rowFilter.files.createdAt"];
          modifiedAt?: parameters["rowFilter.files.modifiedAt"];
          template?: parameters["rowFilter.files.template"];
          title?: parameters["rowFilter.files.title"];
          data?: parameters["rowFilter.files.data"];
          id?: parameters["rowFilter.files.id"];
          disabledFields?: parameters["rowFilter.files.disabledFields"];
          owner?: parameters["rowFilter.files.owner"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          slug?: parameters["rowFilter.files.slug"];
          createdAt?: parameters["rowFilter.files.createdAt"];
          modifiedAt?: parameters["rowFilter.files.modifiedAt"];
          template?: parameters["rowFilter.files.template"];
          title?: parameters["rowFilter.files.title"];
          data?: parameters["rowFilter.files.data"];
          id?: parameters["rowFilter.files.id"];
          disabledFields?: parameters["rowFilter.files.disabledFields"];
          owner?: parameters["rowFilter.files.owner"];
        };
        body: {
          /** files */
          files?: definitions["files"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  files: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    slug: string;
    createdAt: string;
    modifiedAt: string;
    template: string;
    title: string;
    data: string;
    id: string;
    disabledFields?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    owner: string;
  };
  users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** files */
  "body.files": definitions["files"];
  "rowFilter.files.slug": string;
  "rowFilter.files.createdAt": string;
  "rowFilter.files.modifiedAt": string;
  "rowFilter.files.template": string;
  "rowFilter.files.title": string;
  "rowFilter.files.data": string;
  "rowFilter.files.id": string;
  "rowFilter.files.disabledFields": string;
  "rowFilter.files.owner": string;
  /** users */
  "body.users": definitions["users"];
  "rowFilter.users.id": string;
}

export interface operations {}

export interface external {}
